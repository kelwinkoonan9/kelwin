body{
    background-image: linear-gradient(to right, rgb(20, 147, 220), rgb(17, 54, 71));
    font-family:Arial, Helvetica, sans-serif;
}

.box{
    color: white;
    position: absolute;
    top:55%;
    left:50%;
    transform:translate(-50%, -50%);
    background-color: rgba(0, 0, 0, 0.6);
    padding: 15px;
    border-radius:15px;
    width: 30%;
}

fieldset{
    border: 3px solid rgb(111, 0, 255);
}

legend{
    border: 1px solid rgb(111, 0, 255);
    padding: 10px;
    text-align: center;
    background-color: rgb(111, 0, 255);
    border-radius: 8px;
}

.inputBox{
    position: relative;
}

.inputUser{
    background: none;
    border-bottom: 1px solid white;
    outline: none;
    color: white;
    font-size: 15px;
    width: 100%;
    letter-spacing: 2px;
}

.labelInput{/*Animação das labels - nessa parte, as labels irão se encaixar dentro dos inputs*/
    position: absolute;/*Vai ocupar apenas o elemento dela mesma*/
    top: 0px;
    left: 0px;
    pointer-events: none;/*qualquer lugar que eu clicar dentro do input, ele vai executar a ação*/
    transition: 5px;/*transição - para a criação de efeitos de animação personalizada*/
}
/*quando clicar no input eu quero que a label vai para cima do input - por isso a ação é no input*/

.inputUser:focus ~ .labelInput,/*Executar uma açãona nossa label*/
.inputUser:valid ~ .labelInput{/*quando o input tiver válido, eu quero que ele execute essa ação para a label - a informação irá permanecer no input, senão irá ficar por cima*/
    top:-20px;
    font-size: 20px;
    color: rgb(111, 0, 255);
}

#data_nascimento{
